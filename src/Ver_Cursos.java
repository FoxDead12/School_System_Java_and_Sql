
import Classes.DataBaseQuerys;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author david
 */
public class Ver_Cursos extends javax.swing.JInternalFrame {

    /**
     * Creates new form Ver_Cursos
     */
    public Ver_Cursos() {
        initComponents();
        
        DefenirMetodoPesquisa(box_Pesquisa.getSelectedIndex());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        box_Pesquisa = new javax.swing.JComboBox<>();
        txtpesquisa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_cursos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lista_disciplinas = new java.awt.List();
        txt_nome = new javax.swing.JTextField();
        txt_diminuitivo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lista_turmas = new java.awt.List();
        jLabel2 = new javax.swing.JLabel();
        txt_formacao = new javax.swing.JTextField();
        btn_editar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lista1 = new java.awt.List();
        lista2 = new java.awt.List();
        jLabel3 = new javax.swing.JLabel();
        btn_add_d = new javax.swing.JButton();
        btn_remove_d = new javax.swing.JButton();
        txt_info2 = new javax.swing.JLabel();
        btn_finalizar = new javax.swing.JButton();
        txt_edit_nome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_edit_diminuitivo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        box_edit_formacao = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btn_ditar_dados = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Ver Cursos");

        box_Pesquisa.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        box_Pesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Codigo" }));
        box_Pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_PesquisaActionPerformed(evt);
            }
        });

        txtpesquisa.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        txtpesquisa.setText("Pesquisa");
        txtpesquisa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtpesquisaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpesquisaFocusLost(evt);
            }
        });
        txtpesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpesquisaKeyReleased(evt);
            }
        });

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N

        tabela_cursos.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        tabela_cursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo ", "Nome ", "Diminuitivo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_cursos.setRowHeight(30);
        tabela_cursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabela_cursosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela_cursos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1455, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtpesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(box_Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Ver Cursos", jPanel1);

        lista_disciplinas.setFont(new java.awt.Font("Dialog", 0, 19)); // NOI18N

        txt_nome.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        txt_nome.setText("Nome");

        txt_diminuitivo.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        txt_diminuitivo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_diminuitivo.setText("Diminuitivo");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel1.setText("Turmas");

        lista_turmas.setFont(new java.awt.Font("Dialog", 0, 19)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel2.setText("Disciplinas");

        txt_formacao.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        txt_formacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_formacao.setText("Formação");

        btn_editar.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(335, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txt_formacao, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lista_disciplinas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_nome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(lista_turmas, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_diminuitivo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(334, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(167, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_diminuitivo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lista_disciplinas, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lista_turmas, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_formacao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(167, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ver Curso", jPanel2);

        lista1.setFont(new java.awt.Font("Dialog", 0, 19)); // NOI18N

        lista2.setFont(new java.awt.Font("Dialog", 0, 19)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel3.setText("Escolha as disciplinas");

        btn_add_d.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_add_d.setText("Adicionar Disciplina");
        btn_add_d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_dActionPerformed(evt);
            }
        });

        btn_remove_d.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_remove_d.setText("Remover Disciplina");
        btn_remove_d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_remove_dActionPerformed(evt);
            }
        });

        txt_info2.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N

        btn_finalizar.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        btn_finalizar.setText("Editar Disciplinas");
        btn_finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_finalizarActionPerformed(evt);
            }
        });

        txt_edit_nome.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel4.setText("Nome");

        txt_edit_diminuitivo.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel5.setText("Diminuitivo");

        box_edit_formacao.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel6.setText("Formação");

        btn_ditar_dados.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        btn_ditar_dados.setText("Editar Dados");
        btn_ditar_dados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ditar_dadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(371, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_finalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_info2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_add_d, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_remove_d, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lista1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lista2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(txt_edit_diminuitivo, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(box_edit_formacao, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_edit_nome, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    .addComponent(btn_ditar_dados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(288, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addComponent(txt_info2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lista2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lista1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txt_edit_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_edit_diminuitivo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(box_edit_formacao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btn_ditar_dados, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_add_d, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_remove_d, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_finalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Editar Curso", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        setBounds(0, 0, 1500, 869);
    }// </editor-fold>//GEN-END:initComponents

    private void box_PesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_PesquisaActionPerformed
        // TODO add your handling code here:
        
        DefenirMetodoPesquisa(box_Pesquisa.getSelectedIndex());
    }//GEN-LAST:event_box_PesquisaActionPerformed

    private void txtpesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpesquisaKeyReleased
        // TODO add your handling code here:
        
        MostrarCursos(txtpesquisa.getText());
    }//GEN-LAST:event_txtpesquisaKeyReleased

    private void txtpesquisaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpesquisaFocusGained
        // TODO add your handling code here:
        
        txtpesquisa.setText("");
    }//GEN-LAST:event_txtpesquisaFocusGained

    private void txtpesquisaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpesquisaFocusLost
        // TODO add your handling code here:
        if(txtpesquisa.getText().equals(""))
            txtpesquisa.setText("Pesquisa");
    }//GEN-LAST:event_txtpesquisaFocusLost

    private void tabela_cursosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabela_cursosMouseClicked
        // TODO add your handling code here:
        MostarLinhaCarregada();
    }//GEN-LAST:event_tabela_cursosMouseClicked

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        // TODO add your handling code here:
        
        DisciplinasDoCurso.clear();
        DisciplinasNovas.clear();
        DisciplinasRemovidas.clear();
        
        CarregarTodasDisciplinasDoCurso();
        CarregarTodasDisciplinas();
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_add_dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_dActionPerformed
        // TODO add your handling code here:
        
        AdicionarDisciplina();
    }//GEN-LAST:event_btn_add_dActionPerformed

    private void btn_remove_dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_remove_dActionPerformed
        // TODO add your handling code here:
        
        SelecionarDisciplinaParaRemover();
    }//GEN-LAST:event_btn_remove_dActionPerformed

    private void btn_finalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_finalizarActionPerformed
        // TODO add your handling code here:
        
        RemoverDisciplinas();
        AdicionarDisciplinas();
        
    }//GEN-LAST:event_btn_finalizarActionPerformed

    private void btn_ditar_dadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ditar_dadosActionPerformed
        // TODO add your handling code here:
        
        GuardarDados(txt_edit_nome.getText(), txt_edit_diminuitivo.getText(), box_edit_formacao.getSelectedItem().toString());
    }//GEN-LAST:event_btn_ditar_dadosActionPerformed


    int MetodoPesquisa = 0;
    
    
    boolean jaClicou = false;
    int ultimaLinha;
    int ultimaColuna;
    
    int idCursoSelecionado = 0;
    
    ArrayList<String> DisciplinasDoCurso = new ArrayList<String>();
    ArrayList<String> DisciplinasNovas = new ArrayList<String>();
    ArrayList<String> DisciplinasRemovidas = new ArrayList<String>();
    
    
    
    void MostarLinhaCarregada(){
       
        int rowIndex = tabela_cursos.getSelectedRow();
        int columIndex = tabela_cursos.getSelectedColumn();
        DefaultTableModel dtm = (DefaultTableModel) tabela_cursos.getModel();
        
        if(jaClicou == false){
            ultimaLinha = rowIndex;
            ultimaColuna = columIndex;
            
            jaClicou = true;
        }
        else{
            
            if(rowIndex == ultimaLinha && columIndex == ultimaColuna){
                jaClicou = false;
                //Abrir a info dos alunos
                System.out.print("\n" + dtm.getValueAt(rowIndex, 0).toString());
                CarregarDadosCurso(dtm.getValueAt(rowIndex, 0).toString());
                
                jTabbedPane1.setSelectedIndex(1);
                
            }
            else{
                ultimaLinha = rowIndex;
                ultimaColuna = columIndex;
            }
        }  
    }
     
    public void MostrarCursos(String pesquisaTxt){
        
        if(tabela_cursos.getRowCount() > 0){
            DefaultTableModel dtm = (DefaultTableModel) tabela_cursos.getModel();
            dtm.setNumRows(0); 
        }
        
        
        
        DataBaseQuerys baseDados = new DataBaseQuerys();
        Connection conn = baseDados.getDataBaseQuerys();
        
        try {
            
            
            PreparedStatement statement = null;
            switch(MetodoPesquisa){
                
                case 0:
                    statement = conn.prepareStatement("SELECT * FROM cursos c WHERE c.NOME_CURSO LIKE '%"+ pesquisaTxt +"%' ORDER BY c.NOME_CURSO");
                    
                    break;
                
                case 1:
                    
                    statement = conn.prepareStatement("SELECT * FROM cursos c WHERE c.Codigo_Curso LIKE '%"+ pesquisaTxt +"%' ORDER BY c.NOME_CURSO");
                    
                    break;
                
            }
            
            ResultSet rs = statement.executeQuery();
             
             while(rs.next()){
                 
                 
                DefaultTableModel model = (DefaultTableModel) tabela_cursos.getModel();
                model.addRow(new Object[]{rs.getString("Codigo_Curso"),rs.getString("NOME_CURSO"),rs.getString("DIMINUITIVO_CURSO")});
               
                 
             }
             
        }catch(SQLException ex){
            System.out.print(ex);
        }
    }
    
    public void DefenirMetodoPesquisa(int i){
        
        MetodoPesquisa = i;
        txtpesquisa.setText("Pesquisa");
        MostrarCursos("");
    }
    
    public void CarregarDadosCurso(String numero){
        
        
        
        DataBaseQuerys baseDados = new DataBaseQuerys();
        Connection conn = baseDados.getDataBaseQuerys();
        int id = 0;
        String formacaos = "";
        try {
            
            
            PreparedStatement statement = conn.prepareStatement("SELECT * FROM cursos c, formacoes f WHERE f.ID_FORMACAO = c.ID_FORMACAO AND Codigo_Curso = '"+ numero +"'");
            
            ResultSet rs = statement.executeQuery();
             
             while(rs.next()){
                 
                txt_nome.setText(rs.getString("NOME_CURSO"));
                txt_diminuitivo.setText(rs.getString("DIMINUITIVO_CURSO"));
                txt_formacao.setText(rs.getString("NOME_FORMACAO"));
                id = rs.getInt("ID_CURSO");
                
                 
                txt_edit_nome.setText(rs.getString("NOME_CURSO"));
                txt_edit_diminuitivo.setText(rs.getString("DIMINUITIVO_CURSO"));
                box_edit_formacao.setSelectedItem(rs.getString("DIMINUITIVO_CURSO"));
                formacaos = rs.getString("NOME_FORMACAO");
             }
             
        }catch(SQLException ex){
            System.out.print(ex);
        }
        
        idCursoSelecionado = id;
        System.out.print("\nId curso: " + idCursoSelecionado);
        CarregarDisciplinas(id);
        CarregarTurmas(id);
        CarregarFormacoes(formacaos);
    }
    
    public void CarregarFormacoes(String Formacao){
        
        box_edit_formacao.removeAll();
        DataBaseQuerys baseDados = new DataBaseQuerys();
        Connection conn = baseDados.getDataBaseQuerys();
        try {
            
            
            PreparedStatement statement = conn.prepareStatement("SELECT * FROM formacoes");
            
            ResultSet rs = statement.executeQuery();
             
             while(rs.next()){
                 
               box_edit_formacao.addItem(rs.getString("NOME_FORMACAO"));
             }
             
             
             
        }catch(SQLException ex){
            System.out.print(ex);
        }
        System.out.print("\n " + Formacao);
        box_edit_formacao.setSelectedItem(Formacao);
    }
    
    public void CarregarDisciplinas(int id_Curso){
        
        lista_disciplinas.removeAll();
        DataBaseQuerys baseDados = new DataBaseQuerys();
        Connection conn = baseDados.getDataBaseQuerys();

        try {
            
            
            PreparedStatement statement = conn.prepareStatement("SELECT * FROM cursos c, cursodisciplina cd, disciplinas d WHERE c.ID_CURSO = cd.ID_CURSO AND cd.ID_DISCIPLINA = d.ID_DISCIPLINA AND c.ID_CURSO = " + id_Curso + "");
            
            ResultSet rs = statement.executeQuery();
             
             while(rs.next()){
                 
               lista_disciplinas.add(rs.getString("NOME_DISCIPLINA"));
                 
             }
             
        }catch(SQLException ex){
            System.out.print(ex );
        }
    }
    
    public void CarregarTurmas(int id_Curso){
        
        //SELECT * FROM cursos c, turmas t WHERE c.ID_CURSO = t.id_curso AND c.ID_CURSO = 
        lista_turmas.removeAll();
        DataBaseQuerys baseDados = new DataBaseQuerys();
        Connection conn = baseDados.getDataBaseQuerys();

        try {
            
            
            PreparedStatement statement = conn.prepareStatement("SELECT * FROM cursos c, turmas t WHERE c.ID_CURSO = t.id_curso AND c.ID_CURSO = "+ id_Curso +"");
            
            ResultSet rs = statement.executeQuery();
             
             while(rs.next()){
                 
               lista_turmas.add(rs.getString("NOME_TURMA"));
                 
             }
             
        }catch(SQLException ex){
            System.out.print(ex);
        }
    } 
    
    public void CarregarTodasDisciplinas(){
        
         lista1.removeAll();
        DataBaseQuerys baseDados = new DataBaseQuerys();
        Connection conn = baseDados.getDataBaseQuerys();

        try {
            
            
            PreparedStatement statement = conn.prepareStatement("SELECT * FROM disciplinas");
            
            ResultSet rs = statement.executeQuery();
             
             while(rs.next()){
                 
               lista1.add(rs.getString("DIMINUITIVO_DISCIPLINA"));
             }
             
        }catch(SQLException ex){
            System.out.print(ex );
        }
    }
     
    public void CarregarTodasDisciplinasDoCurso(){
        
       
        lista2.removeAll();
        DataBaseQuerys baseDados = new DataBaseQuerys();
        Connection conn = baseDados.getDataBaseQuerys();

        try {
            
            
            PreparedStatement statement = conn.prepareStatement("SELECT * FROM cursos c, cursodisciplina cd, disciplinas d WHERE c.ID_CURSO = cd.ID_CURSO AND cd.ID_DISCIPLINA = d.ID_DISCIPLINA AND c.ID_CURSO = " + idCursoSelecionado + "");
            
            ResultSet rs = statement.executeQuery();
             
             while(rs.next()){
                 
               lista2.add(rs.getString("DIMINUITIVO_DISCIPLINA"));
               DisciplinasDoCurso.add(rs.getString("DIMINUITIVO_DISCIPLINA"));
             }
             
        }catch(SQLException ex){
            System.out.print(ex );
        }
    }
    
    public void AdicionarDisciplina(){
        
       String Disciplina_Diminuitivo = lista1.getSelectedItem();
       
       if(Disciplina_Diminuitivo == null){
           
           txt_info2.setText("Tem de selecionar uma disciplina na lista!");
       }
       else{
           
           if(DisciplinasDoCurso.contains(Disciplina_Diminuitivo) == false && DisciplinasNovas.contains(Disciplina_Diminuitivo) == false){
               
               DisciplinasNovas.add(Disciplina_Diminuitivo);
               
               MostrarDisciplinas();
           }
           else{
               
               txt_info2.setText("Este curso já possui esta disciplina!");
           }
       }
    }
    
    public void SelecionarDisciplinaParaRemover(){
        
        String Disciplina_Diminuitivo = lista2.getSelectedItem();
        
        if(Disciplina_Diminuitivo == null){
           
           txt_info2.setText("Tem de selecionar uma disciplina na lista!");
       }
       else{
           
          
            if(DisciplinasDoCurso.contains(Disciplina_Diminuitivo) == true){
                
                if(DisciplinasRemovidas.contains(Disciplina_Diminuitivo) == false){
                    DisciplinasRemovidas.add(Disciplina_Diminuitivo);
                }
                
                
                ApagarDisciplina(Disciplina_Diminuitivo);
                return;
                       
            }
            
            if(DisciplinasNovas.contains(Disciplina_Diminuitivo) == true){
                              
                ApagarDisciplina(Disciplina_Diminuitivo);
                return;          
            }
       }
    }
    
    public void ApagarDisciplina(String Diminuitivo){
        
       if(DisciplinasDoCurso.contains(Diminuitivo) == true){
                  
           DisciplinasDoCurso.remove(Diminuitivo);
           MostrarDisciplinas();
           return;
        }
            
        if(DisciplinasNovas.contains(Diminuitivo) == true){
                              
            DisciplinasNovas.remove(Diminuitivo);      
            MostrarDisciplinas();
            return;
        }
    }
    
    public void MostrarDisciplinas(){
        
        lista2.removeAll();
        
        for(int i = 0; i <= DisciplinasDoCurso.size() - 1; i++){
            
            lista2.add(DisciplinasDoCurso.get(i));
        }
        
        for(int i = 0; i <= DisciplinasNovas.size() - 1; i++){
            
            lista2.add(DisciplinasNovas.get(i));
        }
    }
    
    public void AdicionarDisciplinas(){
        
        /* for(int i = 0; i <= DisciplinasDoCurso.size() - 1; i++){
            
            
                DataBaseQuerys baseDados = new DataBaseQuerys();
                Connection conn = baseDados.getDataBaseQuerys();
                try{

                    PreparedStatement statement = conn.prepareStatement("INSERT INTO cursodisciplina (ID_CURSO , ID_DISCIPLINA) VALUES ("+ idCursoSelecionado +" ,(SELECT ID_DISCIPLINA FROM disciplinas d WHERE d.DIMINUITIVO_DISCIPLINA = '"+ DisciplinasDoCurso.get(i) +"') )");
                    int rows = statement.executeUpdate();

                    

                }catch(SQLException ex){

                    System.out.print(ex );
                }
            } */
                
            for(int i = 0; i <= DisciplinasNovas.size() - 1; i++){
            
            
                DataBaseQuerys baseDados = new DataBaseQuerys();
                Connection conn = baseDados.getDataBaseQuerys();
                try{

                    PreparedStatement statement = conn.prepareStatement("INSERT INTO cursodisciplina (ID_CURSO , ID_DISCIPLINA) VALUES ("+ idCursoSelecionado +" ,(SELECT ID_DISCIPLINA FROM disciplinas d WHERE d.DIMINUITIVO_DISCIPLINA = '"+ DisciplinasNovas.get(i) +"') )");
                    int rows = statement.executeUpdate();

                    
                txt_info2.setText("Curso Modificado com sucesso!");
                }catch(SQLException ex){

                    System.out.print(ex );
                }
            }
                       
        }
           
    public void RemoverDisciplinas(){
        
        for(int i = 0; i <= DisciplinasRemovidas.size() - 1; i++){
            
            
                DataBaseQuerys baseDados = new DataBaseQuerys();
                Connection conn = baseDados.getDataBaseQuerys();
                try{

                    PreparedStatement statement = conn.prepareStatement("DELETE FROM cursodisciplina WHERE ID_CURSO = "+ idCursoSelecionado +" AND ID_DISCIPLINA = (SELECT ID_DISCIPLINA FROM disciplinas d WHERE d.DIMINUITIVO_DISCIPLINA = '"+ DisciplinasRemovidas.get(i) +"')");
                    int rows = statement.executeUpdate();
                    //System.out.print("\n Foi removido o curso" + idCursoSelecionado + " e a disciplina " + DisciplinasNovas.get(i));
                    
                    txt_info2.setText("Curso Modificado com sucesso!");
                }catch(SQLException ex){

                    System.out.print(ex );
                }
            }
    }
    
    public void GuardarDados(String Nome, String Diminuitivo, String Formacao){
        
                DataBaseQuerys baseDados = new DataBaseQuerys();
                Connection conn = baseDados.getDataBaseQuerys();
                try{

                    PreparedStatement statement = conn.prepareStatement("UPDATE cursos \n" +
                    "SET NOME_CURSO = '"+ Nome +"' , DIMINUITIVO_CURSO = '"+ Diminuitivo +"' , ID_FORMACAO = (SELECT ID_FORMACAO FROM formacoes WHERE NOME_FORMACAO = '"+ Formacao +"') \n" +
                    "WHERE ID_CURSO = " + idCursoSelecionado + "");
                    int rows = statement.executeUpdate();

                    
                txt_info2.setText("Curso Modificado com sucesso!");
                }catch(SQLException ex){

                    System.out.print(ex );
                }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> box_Pesquisa;
    private javax.swing.JComboBox<String> box_edit_formacao;
    private javax.swing.JButton btn_add_d;
    private javax.swing.JButton btn_ditar_dados;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_finalizar;
    private javax.swing.JButton btn_remove_d;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.List lista1;
    private java.awt.List lista2;
    private java.awt.List lista_disciplinas;
    private java.awt.List lista_turmas;
    private javax.swing.JTable tabela_cursos;
    private javax.swing.JTextField txt_diminuitivo;
    private javax.swing.JTextField txt_edit_diminuitivo;
    private javax.swing.JTextField txt_edit_nome;
    private javax.swing.JTextField txt_formacao;
    private javax.swing.JLabel txt_info2;
    private javax.swing.JTextField txt_nome;
    private javax.swing.JTextField txtpesquisa;
    // End of variables declaration//GEN-END:variables
}
